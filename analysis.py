import numpy as np
import pandas as pd

# Functions below take as input a dataframe generated by `simulate_queue(n)`

def queue_cdf(df):
    """
    CDF of observed queue lengths.

    In this case, the random variable is queue length observed by the actual arrivals.
    Returns CDF as dataframe.
    """

    pmf = df.queue_size.value_counts(normalize=True).sort_index()
    cdf = pmf.cumsum()

    return cdf


def weighted_cdf(df):
    """
    CDF of queue lengths weighted by duration.

    In this case, the random variable is queue length at a random time.
    Returns CDF as dataframe.
    """

    df['timeline_copy'] = df.index
    df['duration_event'] = df.timeline_copy.diff()
    df.set_value(df.index[0], 'duration_event', df.loc[df.index[0], 'timeline_copy'])

    grouped_df = pd.DataFrame({'sum_duration': df.groupby(['queue_size']).duration_event.sum()})
    grouped_df['percentage_duration'] = grouped_df.sum_duration / grouped_df.sum_duration.sum()

    cdf = grouped_df.percentage_duration.cumsum()

    return cdf
